//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Clipboarder.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "15.8.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("5")]
        public int EntriesPerPage {
            get {
                return ((int)(this["EntriesPerPage"]));
            }
            set {
                this["EntriesPerPage"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("mspaint.exe")]
        public string ExternalImageEditor {
            get {
                return ((string)(this["ExternalImageEditor"]));
            }
            set {
                this["ExternalImageEditor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(".")]
        public string DbPath {
            get {
                return ((string)(this["DbPath"]));
            }
            set {
                this["DbPath"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Text,Image,HTML")]
        public string ShowContents {
            get {
                return ((string)(this["ShowContents"]));
            }
            set {
                this["ShowContents"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Text,Image,HTML")]
        public string ListenContents {
            get {
                return ((string)(this["ListenContents"]));
            }
            set {
                this["ListenContents"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool HideAfterCopy {
            get {
                return ((bool)(this["HideAfterCopy"]));
            }
            set {
                this["HideAfterCopy"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool StayOnTop {
            get {
                return ((bool)(this["StayOnTop"]));
            }
            set {
                this["StayOnTop"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Alt+Oemtilde")]
        public string GSShow {
            get {
                return ((string)(this["GSShow"]));
            }
            set {
                this["GSShow"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0")]
        public int XPurge {
            get {
                return ((int)(this["XPurge"]));
            }
            set {
                this["XPurge"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0")]
        public int XPurgeValue {
            get {
                return ((int)(this["XPurgeValue"]));
            }
            set {
                this["XPurgeValue"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0, 0")]
        public global::System.Drawing.Point FormLocation {
            get {
                return ((global::System.Drawing.Point)(this["FormLocation"]));
            }
            set {
                this["FormLocation"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0, 0")]
        public global::System.Drawing.Size FormSize {
            get {
                return ((global::System.Drawing.Size)(this["FormSize"]));
            }
            set {
                this["FormSize"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"/// Do not uncomment the following lines, they are not needed
/// public static char Exec(ref string rawText, ref string html, ref Image image, ref string url) {
/// returning 'd' to delete(ignore) the entry
/// returning 'f' to favorite the entry after being stored
return '\0';
/// }")]
        public string RuleScript {
            get {
                return ((string)(this["RuleScript"]));
            }
            set {
                this["RuleScript"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool RuleEnabled {
            get {
                return ((bool)(this["RuleEnabled"]));
            }
            set {
                this["RuleEnabled"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<ArrayOfString xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <string>D1</string>
  <string>D2</string>
  <string>D3</string>
  <string>D4</string>
  <string>Q</string>
  <string>W</string>
  <string>E</string>
  <string>A</string>
  <string>S</string>
  <string>D</string>
  <string>Z</string>
  <string>X</string>
</ArrayOfString>")]
        public global::System.Collections.Specialized.StringCollection PanelShortcutsMap {
            get {
                return ((global::System.Collections.Specialized.StringCollection)(this["PanelShortcutsMap"]));
            }
            set {
                this["PanelShortcutsMap"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool UsePlainTextBox {
            get {
                return ((bool)(this["UsePlainTextBox"]));
            }
            set {
                this["UsePlainTextBox"] = value;
            }
        }
    }
}
